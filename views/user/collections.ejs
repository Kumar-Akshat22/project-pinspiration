<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>My Collections</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/remixicon/fonts/remixicon.css" />
    <!-- Styles -->
    <style>
        .tab-btn {
            padding: 12px 24px;
            font-size: 18px;
            font-weight: bold;
            color: white;
            border: none;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            margin: 0 10px;
            border-radius: 8px;
            cursor: pointer;
            transition: 0.3s ease-in-out;
        }

        .tab-btn.active {
            background: white;
            color: black;
            box-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
        }

        .glass-card {
            background: rgba(255, 255, 255, 0.1);

            border-radius: 12px;
            padding: 13px;

            transition: transform 0.3s ease-in-out;
        }

        .action-btn {
            /* background: rgba(255, 255, 255, 0.2); */
            padding: 6px;
            border-radius: 8px;
            cursor: pointer;
            transition: 0.3s;
        }

        .action-btn:hover {
            background: white;
            color: black;
        }
    </style>
</head>

<body class="bg-gray-900 text-white">
    <% if(success_msg.length> 0) { %>
        <div
          class="fixed top-4 left-1/2 transform -translate-x-1/2 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg z-50"
          role="alert">
          <p class="font-medium">
            <%= success_msg %>
          </p>
        </div>
        <% } %>
    
          <% if(error_msg.length> 0) { %>
            <div
              class="fixed top-4 left-1/2 transform -translate-x-1/2 bg-red-500 text-white px-6 py-3 rounded-lg shadow-lg z-50"
              role="alert">
              <p class="font-medium">
                <%= error_msg %>
              </p>
            </div>
            <% } %>
    
    <!-- Navbar -->
    <nav class="flex justify-between items-center px-6 py-4 bg-gray-800 shadow-lg">
        <h1 class="text-2xl">My Collections</h1>
        <a href="/explore" class="text-gray-300 hover:text-white">Back to Explore</a>
    </nav>

    <!-- Tabs -->
    <div class="flex justify-center mt-6">
        <button id="createdPinsTab" class="tab-btn active">Created Pins</button>
        <button id="savedPinsTab" class="tab-btn">Saved Collections</button>
    </div>

    <!-- Created Pins Container -->
    <div id="createdPinsContainer" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 p-4">
        <% if (createdPins.length===0) { %>
            <div class="text-gray-400 mt-20">
                <p class="text-2xl">You haven't created any pins yet. Start creating now!</p>
            </div>
            <% } else { %>
                <% createdPins.forEach(pin=> { %>
                    <div class="glass-card">
                        <img src="/images/uploads/pins/<%= pin.image %>" class="w-full h-64 object-cover rounded-lg" />
                        <div class="flex justify-between items-center mt-4">
                            <h2 class="text-lg font-bold">
                                <%= pin.pintitle %>
                            </h2>
                            <div class="flex space-x-2">
                                <!-- Edit Button opens global edit modal -->
                                <button
                                    onclick="openEditModal('<%= pin._id %>', '<%= pin.pintitle %>', '<%= pin.pindescription %>', '<%= pin.image %>')"
                                    class="action-btn bg-gray-900">
                                    Edit <i class="ri-edit-line"></i>
                                </button>

                                <!-- Delete Button opens global delete modal -->
                                <button onclick="openDeleteModal('<%= pin._id %>')" class="action-btn bg-red-500">
                                    Delete <i class="ri-delete-bin-line"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <% }) %>
                        <% } %>
    </div>

    <!-- Saved Pins Container (Initially Hidden) -->
    <div id="savedPinsContainer" class="hidden grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 p-4"></div>

    <!-- Global Edit Pin Modal (Single) -->
    <div id="editPinModal"
        class="fixed inset-0 bg-black bg-opacity-60 hidden flex items-center justify-center z-50 backdrop-blur-sm">
        <div
            class="bg-gray-900/90 px-6 py-4 rounded-2xl shadow-2xl w-[500px] relative text-white backdrop-blur-lg border border-gray-700">
            <!-- Close Button -->
            <button id="closeEditModal" class="absolute top-4 right-4 text-gray-300 hover:text-white">
                <i class="ri-close-line text-2xl"></i>
            </button>

            <h2 class="text-3xl font-bold mb-6 text-center">Edit Pin</h2>
            <!-- Pin Image Preview -->
            <div class="mb-4 flex flex-col items-start">
                <label class="text-gray-400 text-[16px]">Current Image:</label>
                <img id="editPinImage" src="" alt="Pin Image" class="w-full h-48 object-cover rounded-lg mt-2" />
            </div>

            <form id="editPinForm" method="post" enctype="multipart/form-data">
                <!-- Upload New Image -->
                <div class="mb-4">
                    <label class="block text-gray-400 text-[16px] mb-1">
                        Upload New Image (Optional):
                    </label>
                    <input type="file" name="image"
                        class="w-full px-4 py-3 border border-gray-600 bg-gray-800 text-white rounded-lg focus:border-red-500 focus:ring-2 focus:ring-red-400 transition" />
                </div>

                <!-- Pin Title -->
                <div class="mb-4">
                    <label class="block text-gray-400 text-[16px] mb-1">Title:</label>
                    <input type="text" name="title" id="editTitle" required
                        class="w-full px-4 py-3 border border-gray-600 bg-gray-800 text-white rounded-lg focus:border-red-500 focus:ring-2 focus:ring-red-400 transition" />
                </div>

                <!-- Pin Description -->
                <div class="mb-4">
                    <label class="block text-gray-400 text-[16px] mb-1">Description:</label>
                    <textarea name="description" id="editDescription" required
                        class="w-full px-4 py-3 border border-gray-600 bg-gray-800 text-white rounded-lg focus:border-red-500 focus:ring-2 focus:ring-red-400 transition"></textarea>
                </div>

                <div class="flex justify-between">
                    <button type="submit" id="savePinChanges"
                        class="px-6 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 transition">
                        Save Changes
                    </button>
                    <button id="cancelEdit"
                        class="px-6 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition">
                        Cancel
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Global Delete Modal (Single) -->
    <div id="deleteModal"
        class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-60 hidden backdrop-blur-sm z-50">
        <div
            class="bg-gray-900/90 p-6 rounded-xl shadow-2xl w-96 text-center border border-gray-700 relative text-white">
            <!-- Close Button -->
            <button onclick="closeDeleteModal()"
                class="absolute top-3 right-4 text-gray-400 hover:text-gray-200 text-3xl">
                &times;
            </button>

            <div class="flex justify-center mb-4">
                <i class="ri-error-warning-line text-red-500 text-5xl"></i>
            </div>
            <h2 class="text-2xl font-bold text-gray-100">Delete Pin?</h2>
            <p class="text-gray-300 mt-2">
                Are you sure you want to delete this pin? This action cannot be undone.
            </p>

            <div class="mt-6 flex justify-center space-x-4">
                <form id="deleteForm" method="POST">
                    <!-- The action will be set dynamically -->
                    <button type="submit"
                        class="px-5 py-2 bg-red-600 text-white rounded-lg text-lg font-semibold hover:bg-red-700 transition">
                        Confirm
                    </button>
                </form>
                <button onclick="closeDeleteModal()"
                    class="px-5 py-2 bg-gray-700 text-white rounded-lg text-lg font-semibold hover:bg-gray-600 transition">
                    Go Back
                </button>
            </div>
        </div>
    </div>

    <!-- Create Pin Modal (Single) -->
    <div id="createPinModal" class="fixed inset-0 bg-black bg-opacity-60 hidden flex items-center justify-center z-50">
        <div
            class="bg-gray-900/90 p-8 rounded-2xl shadow-2xl w-[400px] relative text-white backdrop-blur-lg border border-gray-700">
            <!-- Close Button -->
            <button onclick="closeCreateModal()"
                class="absolute top-3 right-4 text-gray-400 hover:text-gray-200 text-3xl">
                &times;
            </button>

            <h2 class="text-3xl font-bold mb-6 text-center">Create a New Pin</h2>
            <form action="/pins/create" method="POST" enctype="multipart/form-data">
                <!-- Image Upload -->
                <div class="mb-5">
                    <label class="block text-gray-300 font-semibold mb-2">Upload Image:</label>
                    <input type="file" name="image"
                        class="w-full px-4 py-3 border border-gray-600 bg-gray-800 text-white rounded-lg focus:border-red-500 focus:ring-2 focus:ring-red-400 transition">
                </div>
                <!-- Title -->
                <div class="mb-5">
                    <label class="block text-gray-300 font-semibold mb-2">Title:</label>
                    <input type="text" name="title"
                        class="w-full px-4 py-3 border border-gray-600 bg-gray-800 text-white rounded-lg focus:border-red-500 focus:ring-2 focus:ring-red-400 transition">
                </div>
                <!-- Description -->
                <div class="mb-5">
                    <label class="block text-gray-300 font-semibold mb-2">Description:</label>
                    <textarea name="description" rows="3"
                        class="w-full px-4 py-3 border border-gray-600 bg-gray-800 text-white rounded-lg focus:border-red-500 focus:ring-2 focus:ring-red-400 transition"></textarea>
                </div>
                <!-- Submit Button -->
                <button type="submit"
                    class="w-full bg-gray-600 text-white py-3 rounded-lg text-lg font-semibold hover:bg-white hover:text-black transition-all duration-300">
                    Create Pin
                </button>
            </form>
        </div>
    </div>

    <!-- Floating Glass Button to Open Create Modal -->
    <button onclick="openCreateModal()"
        class="fixed bottom-6 right-6 glass-button flex items-center justify-center w-16 h-16 rounded-full backdrop-blur-lg bg-white/10 shadow-md hover:bg-white/20 transition duration-300">
        <i class="ri-add-line text-white text-3xl"></i>
    </button>


    <!-- Scripts -->
    <script>
        // Tab Switching
        document.addEventListener("DOMContentLoaded", function () {
            const createdPinsTab = document.getElementById("createdPinsTab");
            const savedPinsTab = document.getElementById("savedPinsTab");
            const createdPinsContainer = document.getElementById("createdPinsContainer");
            const savedPinsContainer = document.getElementById("savedPinsContainer");

            createdPinsTab.addEventListener("click", function () {
                createdPinsContainer.classList.remove("hidden");
                savedPinsContainer.classList.add("hidden");
                createdPinsTab.classList.add("active");
                savedPinsTab.classList.remove("active");
            });

            savedPinsTab.addEventListener("click", function () {
                fetch(`/users/collections/savedpins?_=${new Date().getTime()}`)
                    .then((response) => response.json())
                    .then((data) => {
                        const userId = data.userId; // Store userId
                        if (!data.savedPins || data.savedPins.length === 0) {
                            savedPinsContainer.innerHTML = `
                <div class="text-center text-gray-400 mt-10 col-span-full">
                  <p class="text-xl">No saved pins yet. Explore and save your favorite pins!</p>
                  <a href="/explore" class="mt-4 inline-block px-6 py-2 bg-blue-600 text-white rounded-lg shadow-md hover:bg-blue-700 transition">
                    Explore Pins
                  </a>
                </div>`;
                        } else {
                            savedPinsContainer.innerHTML = data.savedPins
                                .map(
                                    (pin) => `
                    <div class="glass-card">
            <img src="/images/uploads/pins/${pin.image}" class="w-full h-64 object-cover rounded-lg">
            <div class="flex justify-between items-center mt-4">
              <h2 class="text-lg font-bold">${pin.pintitle}</h2>
              <div class="flex space-x-2">
                <button onclick="likePin('${pin._id}')" class="action-btn" data-pin-id="${pin._id}">
                  <i class="${pin.likes.includes(userId) ? 'ri-heart-fill text-red-500' : 'ri-heart-line'}"></i>
                </button>
              </div>
            </div>
          </div>
                  `
                                )
                                .join("");
                        }
                    })
                    .catch((err) => console.error("Error fetching saved pins:", err));

                savedPinsContainer.classList.remove("hidden");
                createdPinsContainer.classList.add("hidden");
                savedPinsTab.classList.add("active");
                createdPinsTab.classList.remove("active");
            });
        });

        // Edit Modal
        function openEditModal(pinId, title, description, image) {
            document.getElementById("editTitle").value = title;
            document.getElementById("editDescription").value = description;
            document.getElementById("editPinImage").src = `/images/uploads/pins/${image}`;

            // Update form action with the correct pin ID
            const editForm = document.getElementById("editPinForm");
            editForm.action = `/pins/update/${pinId}`;

            document.getElementById("editPinModal").classList.remove("hidden");
        }
        document.getElementById("closeEditModal").addEventListener("click", () => {
            document.getElementById("editPinModal").classList.add("hidden");
        });
        document.getElementById("cancelEdit").addEventListener("click", (e) => {
            e.preventDefault();
            document.getElementById("editPinModal").classList.add("hidden");
        });

        // Delete Modal
        let deletePinId = null;
        function openDeleteModal(pinId) {
            deletePinId = pinId;
            // Update form action dynamically
            document.getElementById("deleteForm").action = `/pins/delete/${pinId}`;
            document.getElementById("deleteModal").classList.remove("hidden");
        }
        function closeDeleteModal() {
            document.getElementById("deleteModal").classList.add("hidden");
        }

        // Create Pin Modal
        function openCreateModal() {
            document.getElementById("createPinModal").classList.remove("hidden");
        }
        function closeCreateModal() {
            document.getElementById("createPinModal").classList.add("hidden");
        }
        
        async function likePin(pinId) {
            await fetch(`/pins/like/${pinId}` , {
                method: "POST"
            })
            .then(response => response.json())
            .then((data) => {
                
                if(data.success){
                    
                    const likeButton = document.querySelector(`[data-pin-id = "${pinId}"]`);
                    const icon = likeButton.querySelector('i');

                    if(data.liked){

                        icon.classList.remove("ri-heart-line");
                        icon.classList.add("ri-heart-fill", "text-red-500");
                    } 
                    else{
                        
                        icon.classList.remove("ri-heart-fill", "text-red-500");
                        icon.classList.add("ri-heart-line");

                    }
                }
            
            })
            .catch((err)=>{
                console.log("Error liking the pin")
            })
        }
    </script>

</body>

</html>